@model ProcessManagement.Models.TaskProcess

@{
    ViewBag.Title = "AddTaskFormProcess";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var step = ViewData["Step"] as ProcessManagement.Models.Step;
    var group = ViewData["Group"] as ProcessManagement.Models.Group;
    var roles = ViewData["ListRole"] as List<ProcessManagement.Models.Role>;
    var userRole = ViewData["UserRoles"] as ProcessManagement.Models.Participate;
    var isManager = userRole.IsManager;
}


@section CustomCss{
    <link rel="stylesheet" href="~/Content/vendor/dropify/css/dropify.min.css">
    <link rel="stylesheet" href="~/Content/vendor/select2/select2.css" />
    <link rel="stylesheet" href="~/Content/vendor/switchery/dist/switchery.min.css" />
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth primary-theme"><i class="fa fa-arrow-left"></i></a> Create New Task</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="~/Home/Index" class="primary-theme"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item"><a href="/" class="primary-theme">Groups</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "Show", groupid = group.Id })" class="primary-theme">@group.Name</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "process", action = "ShowStep", processid = step.IdProcess })" class="primary-theme">@step.Process.Name</a></li>
                <li class="breadcrumb-item"><a href="" class="primary-theme">@step.Name</a></li>
                <li class="breadcrumb-item"><a href="" class="primary-theme"> @Model.Name</a></li>
            </ul>
        </div>

    </div>
</div>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="body" id="show-task">
                <div class="row clearfix">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label for="task-name" class="required">Task Name</label>
                            <input type="text" class="form-control" id="task-name" name="@Html.NameFor(m => m.Name)" value="@Model.Name" disabled>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <label for="task-role">Select Role</label>
                        <select id="task-role" class="form-control show-tick ms select2" disabled>
                            <option></option>
                            @foreach (var role in roles.Where(x => x.IsRun == null || x.IsRun == false))
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-description">Description</label>
                            <textarea class="form-control" rows="6" placeholder="Write something about your task (optional)" id="task-description" name="@Html.NameFor(m => m.Description)" disabled>@Model.Description</textarea>
                        </div>
                    </div>
                    <div class="col-sm-12 setDataWrap">
                        <div id="build-wrap"></div>
                        <div class="render-wrap" id="render-wrap"></div>
                    </div>

                    @if (isManager)
                    {
                        <div class="col-sm-12">
                            <div class="mt-2" id="button-action">
                                <button id="btn-edit" class="btn btn-primary-theme">Edit</button>
                                <a href="@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process", action = "deletetask", taskid = Model.Id })" class="btn btn-outline-danger" id="btn-remove-task">Delete</a>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section CustomScripts{
    <script src="~/Content/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/Content/build/js/pages/forms/dropify.js"></script>
    <script src="~/Content/vendor/select2/select2.min.js"></script>
    <script src="~/Content/vendor/switchery/dist/switchery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
    <script src="~/Content/vendor/FormBuilder/form-builder.min.js"></script>
    <script src="~/Content/vendor/FormBuilder/form-render.min.js"></script>

    <script>
        $(function () {
            var bAction = `<button id="btn-save" class="btn btn-primary-theme">Save</button>
                            <button id="btn-back" class="btn btn-outline-secondary">Back</button>`;
            var showForm = $("#show-task").html();
            var taskform = '@Model.ValueFormJson'.replace(/&quot;/g, "\"");
            var formData = taskform;
            if (taskform != null) {
               $("#render-wrap").formRender({formData});
            }
            var form;

            var switchArr = createSwitch();
            switchArr.forEach(item => item.disable());

            $("select#task-role").select2({
                placeholder: "Select Role",
                allowClear: true,
            }).select2('val', @Model.IdRole);

            //Button edit

            $("body").on("click", "#btn-edit",function () {
                var $this = $(this);
                var temp = bAction;
                if (taskform != null) {
                    var fbEditor = document.getElementById('build-wrap');
                    form = $(fbEditor).formBuilder({ formData });
                }

                var actionButton = $this.parents("#button-action");
                actionButton.html(temp);
                $("#show-task").find("input[type!='checkbox'], select#task-role, textarea").prop("disabled", function () {
                    return !$(this).prop("disabled");
                });
                switchArr.forEach(item => item.enable());
                $("#render-wrap").empty();
            });
            //Button back
            $("body").on("click", "#btn-back", function () {
                $("#show-task").html(showForm);
                switchArr = createSwitch();
                if (taskform != null) {
                    $("#render-wrap").formRender({ formData });
                    $("#build-wrap").empty();
                }
            });
            $("body").on("click", "#btn-save", function () {
                $this = $(this);
                toggleLoading($this);

                var name = $('#task-name').val();
                var role = $('#task-role').val();
                var description = $('#task-description').val();

                var formBuilder = form.actions.getData('json', true).replace(/\r?\n|\r/g, '');
                formBuilder = JSON.parse(formBuilder);

                var tempArr = []
                for (var i = 0; i < formBuilder.length; i++) {
                    tempArr.push(formBuilder[i]);
                }

                let data = {
                    name: name,
                    idRole: role,
                    description: description,
                    formBuilder: JSON.stringify(tempArr)
                }
                if (name == "") {
                    showToastr("error", "Task name not null", "toast-bottom-left");
                    toggleLoading($this);
                } else {
                    editFormTask(data);
                }
            });
            $("body").on("click", "#btn-remove-task", function () {
                var con = confirm("bạn muốn xóa task này không?");
                if (con) {
                    localStorage.setItem("showStep", @step.Id);
                }
                return con;
            })
        });
        function editFormTask(data) {
             $.ajax({
                url: "@Url.Action("editFormTask", "process",new {area = "api"})",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        localStorage.setItem("showStep", @step.Id);
                        location.href = '@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process" ,action = "showstep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })';
                    } else {
                        console.error(response)
                    }
                }
            });
        }
    </script>

}
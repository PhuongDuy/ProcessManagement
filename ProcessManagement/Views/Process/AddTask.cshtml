@model ProcessManagement.Models.TaskProcess

@{
    ViewBag.Title = "AddTaskProcess";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var step = ViewData["step"] as ProcessManagement.Models.Step;
    var group = ViewData["Group"] as ProcessManagement.Models.Group;
    Session["idstep"] = step.Id;
}


@section CustomCss{
    <link rel="stylesheet" href="~/Content/vendor/dropify/css/dropify.min.css">
    <link rel="stylesheet" href="~/Content/vendor/select2/select2.css" />
    <link rel="stylesheet" href="~/Content/vendor/switchery/dist/switchery.min.css" />
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a> Create New Task</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="~/Home/Index" class="theme-color"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item"><a href="~/Group/Index">Groups</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "Show", groupid = group.Id })">@group.Name</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "process", action = "ShowStep", processid = step.IdProcess })">@step.Process.Name</a></li>
                <li class="breadcrumb-item"><a href="">@step.Name</a></li>
                <li class="breadcrumb-item"><a href=""> Create New Task</a></li>
            </ul>
        </div>
        <div class="col-lg-6 col-md-4 col-sm-12 text-right">
            <div class="bh_chart hidden-xs">
                <div class="float-left m-r-15">
                    <small>Visitors</small>
                    <h6 class="mb-0 mt-1"><i class="icon-user"></i> 1,784</h6>
                </div>
                <span class="bh_visitors float-right">2,5,1,8,3,6,7,5</span>
            </div>
            <div class="bh_chart hidden-sm">
                <div class="float-left m-r-15">
                    <small>Visits</small>
                    <h6 class="mb-0 mt-1"><i class="icon-globe"></i> 325</h6>
                </div>
                <span class="bh_visits float-right">10,8,9,3,5,8,5</span>
            </div>
            <div class="bh_chart hidden-sm">
                <div class="float-left m-r-15">
                    <small>Chats</small>
                    <h6 class="mb-0 mt-1"><i class="icon-bubbles"></i> 13</h6>
                </div>
                <span class="bh_chats float-right">1,8,5,6,2,4,3,2</span>
            </div>
        </div>
    </div>
</div>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="body">
                <div class="row clearfix">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label for="task-name" class="required">Task Name</label>
                            <input type="text" class="form-control" id="task-name" name="@Html.NameFor(m => m.Name)">
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <label for="task-role">Select Role</label>
                        <select id="task-role" class="form-control show-tick ms select2">
                            <option></option>
                            @if (ViewBag.Listrole != null)
                            {
                                foreach (var role in ViewBag.Listrole)
                                {
                                    <option value="@role.Id">@role.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-description">Description</label>
                            <textarea class="form-control" rows="6" placeholder="Write something about your task (optional)" id="task-description" name="@Html.NameFor(m => m.Description)"></textarea>
                        </div>
                    </div>
                    <div class="col-sm-12 ">
                        <div class="choose-type row">
                            <div class="choose-item col-sm-12 form-group" id="choose-input">
                                <fieldset>
                                    <legend>Response Text</legend>
                                    <div class="row" style="margin-left:0;margin-right:0;">
                                        <div class="col-sm-2">
                                            <div class="form-group input-has-prefix char">
                                                <label for="text-maxlength">Max Length</label>
                                                <input id="text-maxlength" type="number" maxlength="17" class="form-control limit-length">
                                            </div>
                                        </div>
                                        <div class="col-sm-10">
                                            <div class="form-group">
                                                <label for="text-label">Response Label</label>
                                                <input id="text-label" type="text" class="form-control">
                                            </div>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group switch-custom">
                                                <label>Required: <input type="checkbox" class="checkbox-switch" id="text-required"/></label>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="choose-item col-sm-12 form-group" id="choose-file">
                                <fieldset>
                                    <legend>Response File</legend>
                                    <div class="row" style="margin-left:0;margin-right:0;">
                                        <div class="col-sm-2">
                                            <div class="form-group input-has-prefix mb">
                                                <label for="file-maxsize">File Size</label>
                                                <input id="file-maxsize" type="number" maxlength="17" class="form-control limit-length">
                                            </div>
                                        </div>
                                        <div class="col-sm-10">
                                            <div class="form-group">
                                                <label for="file-label">Response Label</label>
                                                <input id="file-label" type="text" class="form-control">
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group switch-custom">
                                                <label>Required: <input id="file-required" type="checkbox" class="checkbox-switch" /></label>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="mt-2">
                            <button id="btn-save" class="btn btn-primary-theme" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Processing Create">Create</button>
                            <a href="#" class="btn btn-outline-secondary">Go Back</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section CustomScripts{
    <script src="~/Content/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/Content/build/js/pages/forms/dropify.js"></script>
    <script src="~/Content/vendor/select2/select2.min.js"></script>
    <script src="~/Content/vendor/switchery/dist/switchery.min.js"></script>
    <script>
        $(function () {
            $(".input-has-prefix input").on("change paste keyup", function () {
                var val = $(this).val();
                var parent = $(this).parents(".input-has-prefix");
                if (val == "") {
                    parent.removeClass("hide-prefix");
                } else {
                    parent.addClass("hide-prefix");
                }
            })
            $(".limit-length").on("keypress", function (e) {
                var maxlengthNumber = parseInt($(this).attr('maxlength'));
                var inputValueLength = $(this).val().length + 1;
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {

                    return false;
                }
                if (maxlengthNumber < inputValueLength) {
                    return false;
                }
            })
            createSwitch();
            $("select#task-role").select2({
                placeholder: "Select Role",
                allowClear: true
            });
            $('#btn-save').on('click', function () {
                $this = $(this);
                toggleLoading($this);

                var name = $('#task-name').val();
                var role = $('#task-role').val();
                var description = $('#task-description').checked == true ? "true" : "false";

                //text
                var inputLabel = $('#text-label').val();
                var inputmaxLength = $('#text-maxlength').val();
                var inputRequire = $('#text-required').checked == true ? "true" : "false";
                //file

                var fileLabel = $("#file-label").val();
                var fileSize = $('#file-maxsize').val();
                var fileRequire = $('#file-required').val();

                var inputConfig = {
                    label: inputLabel,
                    maxlength: inputmaxLength,
                    required: inputRequire
                };
                let fileConfig = {
                    label: fileLabel,
                    size: fileSize,
                    require: fileRequire
                };

                let data = {
                    name: name,
                    idRole: role,
                    description: description,
                    inputConfig: JSON.stringify(inputConfig),
                    fileConfig: JSON.stringify(fileConfig)
                 }
                 if (name == "") {
                     showToastr("error", "Task name not null", "toast-bottom-left");
                     toggleLoading($this);
                 }
                 addTask(data);
                
            }) 
        }); 
        function createSwitch() {
            let el = $('.checkbox-switch');
            let switchArr = [];
            el.each(function (index, e) {
                switchArr[index] = new Switchery(e, {
                    size: 'small',
                });
            })
        }
        function createSelect2() {
            $("select.select2").select2({
                allowClear: true
            });

        }
        function addTask(data) {
            $.ajax({
                url: "@Url.RouteUrl("GroupLocalizedDefault", new { controller = "Process" , action = "addtask" })",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        location.href = '@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "Process" ,action = "ShowStep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })';
                    } else {
                        showToastr("error", response.message, "toast-bottom-left")
                        console.error(response)
                    }
                }
            });
        }
        function toggleLoading(element) {
            var text = element.text();
            var loadingConfig = element.attr("data-loading-text");
            element.html(loadingConfig).attr("data-loading-text", text);
        }
    </script>
  
}
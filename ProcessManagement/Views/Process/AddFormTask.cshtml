@model ProcessManagement.Models.TaskProcess

@{
    ViewBag.Title = "AddFormTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var step = ViewData["Step"] as ProcessManagement.Models.Step;
    var group = ViewData["Group"] as ProcessManagement.Models.Group;
    var roles = ViewData["ListRole"] as List<ProcessManagement.Models.Role>;
}


@section CustomCss{
    <link rel="stylesheet" href="~/Content/vendor/dropify/css/dropify.min.css">
    <link rel="stylesheet" href="~/Content/vendor/select2/select2.css" />
    <link rel="stylesheet" href="~/Content/vendor/switchery/dist/switchery.min.css" />
    
}
<div class="block-header">
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth primary-theme"><i class="fa fa-arrow-left"></i></a> Create New Task</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="~/Home/Index" class="primary-theme"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item"><a href="/" class="primary-theme">Groups</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "group", action = "Show", groupid = group.Id })" class="primary-theme">@group.Name</a></li>
                <li class="breadcrumb-item"><a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { controller = "process", action = "ShowStep", processid = step.IdProcess })" class="primary-theme">@step.Process.Name</a></li>
                <li class="breadcrumb-item"><a href="" class="primary-theme">@step.Name</a></li>
                <li class="breadcrumb-item"><a href="" class="primary-theme"> Create New Task</a></li>
            </ul>
        </div>
        <div class="col-lg-6 col-md-4 col-sm-12 text-right">
            <div class="bh_chart hidden-xs">
                <div class="float-left m-r-15">
                    <small>Visitors</small>
                    <h6 class="mb-0 mt-1"><i class="icon-user"></i> 1,784</h6>
                </div>
                <span class="bh_visitors float-right">2,5,1,8,3,6,7,5</span>
            </div>
            <div class="bh_chart hidden-sm">
                <div class="float-left m-r-15">
                    <small>Visits</small>
                    <h6 class="mb-0 mt-1"><i class="icon-globe"></i> 325</h6>
                </div>
                <span class="bh_visits float-right">10,8,9,3,5,8,5</span>
            </div>
            <div class="bh_chart hidden-sm">
                <div class="float-left m-r-15">
                    <small>Chats</small>
                    <h6 class="mb-0 mt-1"><i class="icon-bubbles"></i> 13</h6>
                </div>
                <span class="bh_chats float-right">1,8,5,6,2,4,3,2</span>
            </div>
        </div>
    </div>
</div>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="body">
                <div class="row clearfix">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label for="task-name" class="required">Task Name</label>
                            <input required type="text" class="form-control" id="task-name" name="@Html.NameFor(m => m.Name)">
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <label for="task-role">Select Role</label>
                        <select id="task-role" class="form-control show-tick ms select2">
                            <option></option>
                            @foreach (var role in roles)
                            {
                                <option value="@role.Id">@role.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="task-description">Description</label>
                            <textarea class="form-control" rows="6" placeholder="Write something about your task (optional)" id="task-description" name="@Html.NameFor(m => m.Description)"></textarea>
                        </div>
                    </div>
                    <div class="col-sm-12" id="build-wrap"></div>
                    <div class="col-sm-12">
                        <div class="mt-2">
                            <button id="btn-save" class="btn btn-primary-theme" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Processing Create">Create</button>
                            <a href="#" class="btn btn-outline-secondary">Go Back</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section CustomScripts{
    <script src="~/Content/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/Content/build/js/pages/forms/dropify.js"></script>
    <script src="~/Content/vendor/select2/select2.min.js"></script>
    <script src="~/Content/vendor/switchery/dist/switchery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>
    <script src="~/Content/build/js/form-builder.min.js"></script>
    
    <script>
        $(function () {
            var formB = $("#build-wrap").formBuilder();
            createSwitch();
            $("select#task-role").select2({
                placeholder: "Select Role",
                allowClear: true
            });
            $('#btn-save').on('click', function () {
                $this = $(this);
                toggleLoading($this);

                var name = $('#task-name').val();
                var role = $('#task-role').val();
                var description = $('#task-description').val();

                var formBuilder = formB.actions.getData('json', true);

                let data = {
                    name: name,
                    stepid : @step.Id,
                    idRole: role,
                    description: description,
                    formBuilder: JSON.stringify(formBuilder)
                 }
                if (name == "") {
                    showToastr("error", "Task name not null", "toast-bottom-left");
                } else {
                    AddFormTask(data);
                }
                toggleLoading($this);
            })
        });
        function AddFormTask(data) {
            $.ajax({
                url: "@Url.Action("AddFormTask", "process", new { area = "api" })",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    if (response.status == 200) {
                        localStorage.setItem("showStep", @step.Id);
                        location.href = '@Url.RouteUrl("GroupControlLocalizedDefault",new { controller = "process" ,action = "showstep", groupslug = group.groupSlug, groupid = group.Id, processid = step.IdProcess })';
                    } else {
                        showToastr("error", response.message, "toast-bottom-left")
                        console.error(response)
                    }
                }
            });
        }
    </script>

}
@model ProcessManagement.Models.Group
@using Microsoft.AspNet.Identity;
@{
    var userList = ViewData["ListUser"] as List<ProcessManagement.Models.AspNetUser>;
    //var group = ViewData["Group"] as ProcessManagement.Models.Group;
    bool isUserEmpty = !userList.Any();
    var participentlist = ViewData["ListParticipant"] as List<ProcessManagement.Models.Participate>;
    var showUserSetting = TempData["UserSetting"] != null ? "in" : "";
    //role
    var userRole = ViewData["Roles"] as ProcessManagement.Models.Participate;
    var isAdmin = userRole.IsAdmin;
    var isOwner = userRole.IsOwner;
    var isManager = userRole.IsManager;

}
<section class="settings">
    <div class="settings-header">
        <h4>Members</h4>
        <button class="btn btn-default" type="button" data-toggle="collapse" data-target="#member-settings" aria-expanded="false" aria-controls="member-settings">
            Expand
        </button>
        <p>
            You can invite a new member to @Model.Name.
        </p>
    </div>
    <div class="settings-content collapse @showUserSetting" id="member-settings">

        <form action="@Url.RouteUrl("GroupLocalizedDefault",new { controller = "Group", action = "AddMember" })" method="post">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class=" row">
                @if (!isUserEmpty && (isAdmin || isOwner))
                {
                    <span class="control-label col-md-1 col-sm-1 col-xs-12">User</span>
                    <div class="col-md-11 col-sm-11 col-xs-12">
                        @foreach (var user in userList)
                        {
                            <div class="input-group col-md-3" style="margin:7px;padding: 0;margin-left:20px">
                                <label>
                                    <input runat="server" value="@user.Email" type="checkbox" class="flat" name="adduser"> @user.UserName
                                </label>
                            </div>

                        }
                        <button type="submit" class="btn btn-success">Add Member</button>
                    </div>
                }
            </div>
        </form>

        <h5 class="member existing-title">
            Existing members and groups
        </h5>
        <table class="table table-hover table-striped" id="dataTable" width="100%" cellspacing="0">
            <thead class="thead-dark">
                <tr>
                    <th colspan="3" style="font-weight:normal" class="default">
                        Members of <b style="font-size:16px">@Model.Name</b> <span class="badge">@participentlist.Count() Members</span>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in participentlist)
                {
                    <tr>
                        <td>
                            @item.AspNetUser.UserName
                            @if (item.AspNetUser.Id == User.Identity.GetUserId())
                            {
                                <span class="badge" style="background-color:#26B99A;color:white;">It's you</span>
                            }
                        </td>
                        <td>
                            @if (item.IsOwner)
                            {
                                <p>Owner</p>
                            }
                            @if (item.IsAdmin)
                            {
                                <p>Admin</p>
                            }
                            @if (item.IsManager)
                            {
                                <p>Manager</p>
                            }
                            @if (!item.IsManager && !item.IsAdmin)
                            {
                                <p>Member</p>
                            }
                        </td>
                        <td>

                            @*@if (item.AspNetUser.Id == User.Identity.GetUserId() && User.Identity.GetUserId() != item.Group.IdOwner)*@
                            @if (isAdmin && !item.IsOwner && item.IdUser != User.Identity.GetUserId())
                            {
                                <a href=" @Url.RouteUrl("GroupControlLocalizedDefault",new { groupslug = Model.groupSlug, action = "editrolemember", groupid = Model.Id, participateid = item.Id })" class="btn btn-primary" style="margin-right:15px"><i class="fas fa-pen"></i></a>
                            }
                            @if (item.AspNetUser.Id == User.Identity.GetUserId() && !isOwner)
                            {

                                <a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { groupslug = Model.groupSlug, action = "memberleavegroup", groupid = Model.Id, participateid = item.Id })" onclick="return confirmBeforeLeave()" class="btn btn-danger"><i class="fas fa-sign-out-alt"></i> Leave</a>
                            }
                            else if ((isAdmin || isOwner) && item.AspNetUser.Id != User.Identity.GetUserId() && !item.IsOwner)
                            {
                                <a href="@Url.RouteUrl("GroupControlLocalizedDefault", new { groupslug = Model.groupSlug, action = "deletemember", groupid = Model.Id, participateid = item.Id })" onclick="return confirmBeforeDeleteMember('@item.AspNetUser.Email')" class="btn btn-danger"><i class="fas fa-trash-alt"></i></a>
                            }
                            else if (isOwner && item.IdUser == User.Identity.GetUserId())
                            {
                                <div style="display:inline">
                                    <span>You cant leave because you're owner</span>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>